# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: d99993e0-8770-427f-b49d-6a536d589392
      ARM_SUBSCRIPTION_ID: 96b73036-7cc0-4f2f-a24c-100e1d9836ca
      ARM_TENANT_ID: af8838c9-b366-4dd8-9820-7b88df50eaab
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: HashiCorp - Setup Terraform
        # You may pin to the exact commit or the version.
        # uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # ClientId of the Azure Service principal created.
          client-id: # optional
          # TenantId of the Azure Service principal created.
          tenant-id: # optional
          # Azure subscriptionId
          subscription-id: # optional
          # Set this value to true to enable Azure PowerShell Login in addition to Azure CLI login
          enable-AzPSSession: # optional
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          environment: # optional, default is azurecloud
          # Set this value to true to enable support for accessing tenants without subscriptions
          allow-no-subscriptions: # optional
          # Provide audience field for access-token. Default value is api://AzureADTokenExchange
          audience: # optional, default is api://AzureADTokenExchange
          # The type of authentication. Supported values are SERVICE_PRINCIPAL, IDENTITY. Default value is SERVICE_PRINCIPAL
          auth-type: # optional, default is SERVICE_PRINCIPAL
            
      - name: Run a multi-line script
        env: # Or as an environment variable
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          terraform init
          terraform plan
          terraform apply
